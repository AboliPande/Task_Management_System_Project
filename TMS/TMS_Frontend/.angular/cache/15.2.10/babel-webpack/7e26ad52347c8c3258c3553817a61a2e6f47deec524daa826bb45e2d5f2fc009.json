{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MyServiceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8080/api/v1/tasks\";\n    this.baseURL1 = \"http://localhost:8080/api/v1/users\";\n  }\n  getAllTasks() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  getTaskById(task_id) {\n    return this.httpClient.get(`${this.baseURL}/${task_id}`);\n  }\n  deleteTask(task_id) {\n    return this.httpClient.delete(`${this.baseURL}/${task_id}`);\n  }\n  createTask(task) {\n    return this.httpClient.post(`${this.baseURL}`, task);\n  }\n  updateTask(task_id, task) {\n    return this.httpClient.put(`${this.baseURL}/${task_id}`, task);\n  }\n  getAllUsers() {\n    return this.httpClient.get(`${this.baseURL1}`);\n  }\n  getUserById(id) {\n    return this.httpClient.get(`${this.baseURL1}/${id}`);\n  }\n  deleteUser(id) {\n    return this.httpClient.delete(`${this.baseURL1}/${id}`);\n  }\n  createUser(user) {\n    return this.httpClient.post(`${this.baseURL1}`, user);\n  }\n  updateUser(id, user) {\n    return this.httpClient.put(`${this.baseURL1}/${id}`, user);\n  }\n  static #_ = this.ɵfac = function MyServiceService_Factory(t) {\n    return new (t || MyServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MyServiceService,\n    factory: MyServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,gBAAgB;EAG3BC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAFtB,YAAO,GAAG,oCAAoC;IAC9C,aAAQ,GAAG,oCAAoC;EACV;EAC7CC,WAAW;IACT,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAkB,GAAG,IAAI,CAACC,OAAO,EAAE,CAAC;EAChE;EACAC,WAAW,CAACC,OAAe;IACzB,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAgB,GAAG,IAAI,CAACC,OAAO,IAAIE,OAAO,EAAE,CAAC;EACzE;EACAC,UAAU,CAACD,OAAe;IACxB,OAAO,IAAI,CAACL,UAAU,CAACO,MAAM,CAAC,GAAG,IAAI,CAACJ,OAAO,IAAIE,OAAO,EAAE,CAAC;EAC7D;EACAG,UAAU,CAACC,IAAkB;IAC3B,OAAO,IAAI,CAACT,UAAU,CAACU,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,EAAE,EAAEM,IAAI,CAAC;EACtD;EACAE,UAAU,CAACN,OAAe,EAAEI,IAAmB;IAC7C,OAAO,IAAI,CAACT,UAAU,CAACY,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,IAAIE,OAAO,EAAE,EAACI,IAAI,CAAC;EAC/D;EACAI,WAAW;IACT,OAAO,IAAI,CAACb,UAAU,CAACE,GAAG,CAAsB,GAAG,IAAI,CAACY,QAAQ,EAAE,CAAC;EACrE;EACAC,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAAChB,UAAU,CAACE,GAAG,CAAoB,GAAG,IAAI,CAACY,QAAQ,IAAIE,EAAE,EAAE,CAAC;EACzE;EACAC,UAAU,CAACD,EAAU;IACnB,OAAO,IAAI,CAAChB,UAAU,CAACO,MAAM,CAAC,GAAG,IAAI,CAACO,QAAQ,IAAIE,EAAE,EAAE,CAAC;EACzD;EACAE,UAAU,CAACC,IAAsB;IAC/B,OAAO,IAAI,CAACnB,UAAU,CAACU,IAAI,CAAC,GAAG,IAAI,CAACI,QAAQ,EAAE,EAAEK,IAAI,CAAC;EACvD;EACAC,UAAU,CAACJ,EAAU,EAAEG,IAAuB;IAC5C,OAAO,IAAI,CAACnB,UAAU,CAACY,GAAG,CAAC,GAAG,IAAI,CAACE,QAAQ,IAAIE,EAAE,EAAE,EAACG,IAAI,CAAC;EAC3D;EAAC;qBAjCUrB,gBAAgB;EAAA;EAAA;WAAhBA,gBAAgB;IAAAuB,SAAhBvB,gBAAgB;IAAAwB,YAFf;EAAM","names":["MyServiceService","constructor","httpClient","getAllTasks","get","baseURL","getTaskById","task_id","deleteTask","delete","createTask","task","post","updateTask","put","getAllUsers","baseURL1","getUserById","id","deleteUser","createUser","user","updateUser","factory","providedIn"],"sourceRoot":"","sources":["G:\\TMS\\TMS_Backend\\src\\app\\my-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskComponent } from './task/task.component';\nimport { HttpClient } from '@angular/common/http';\nimport { UserInfoComponent } from './user-info/user-info.component';\nimport { UserComponent } from './user/user.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyServiceService {\n  private baseURL = \"http://localhost:8080/api/v1/tasks\";\n  private baseURL1 = \"http://localhost:8080/api/v1/users\";\n  constructor(private httpClient:HttpClient) { }\n  getAllTasks():Observable<TaskComponent[]>{\n    return this.httpClient.get<TaskComponent[]>(`${this.baseURL}`);\n  }\n  getTaskById(task_id: number): Observable<TaskComponent>{\n    return this.httpClient.get<TaskComponent>(`${this.baseURL}/${task_id}`);\n  }\n  deleteTask(task_id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL}/${task_id}`);\n  }\n  createTask(task:TaskComponent): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL}`, task);\n  }\n  updateTask(task_id: number, task: TaskComponent): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL}/${task_id}`,task);\n  }\n  getAllUsers():Observable<UserInfoComponent[]>{\n    return this.httpClient.get<UserInfoComponent[]>(`${this.baseURL1}`);\n  }\n  getUserById(id: number): Observable<UserInfoComponent>{\n    return this.httpClient.get<UserInfoComponent>(`${this.baseURL1}/${id}`);\n  }\n  deleteUser(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL1}/${id}`);\n  }\n  createUser(user:UserInfoComponent): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL1}`, user);\n  }\n  updateUser(id: number, user: UserInfoComponent): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL1}/${id}`,user);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}