{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateAccountComponent_div_23_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Id is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateAccountComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, CreateAccountComponent_div_23_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.Id.errors == null ? null : ctx_r0.Id.errors[\"required\"]);\n  }\n}\nfunction CreateAccountComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email Id is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateAccountComponent_div_31_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Email Id is not in a Valid Format \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateAccountComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtemplate(1, CreateAccountComponent_div_31_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(2, CreateAccountComponent_div_31_div_2_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.EmailId.errors == null ? null : ctx_r1.EmailId.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.EmailId.errors == null ? null : ctx_r1.EmailId.errors[\"pattern\"]);\n  }\n}\nfunction CreateAccountComponent_div_39_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is Required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateAccountComponent_div_39_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is not valid......It should atleast contain 1 uppercase, 1 lowercase, 1 digit and 1 special symbol and should be atleast 8 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateAccountComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵtemplate(1, CreateAccountComponent_div_39_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(2, CreateAccountComponent_div_39_div_2_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.Password.errors == null ? null : ctx_r2.Password.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.Password.errors == null ? null : ctx_r2.Password.errors[\"pattern\"]);\n  }\n}\nexport class CreateAccountComponent {\n  constructor(route) {\n    this.route = route;\n    this.loginForm = new FormGroup({\n      id: new FormControl('', [Validators.required]),\n      emailId: new FormControl('', [Validators.required, Validators.pattern('^[a-z0-9]+@[gmail]+\\.com$')]),\n      password: new FormControl('', [Validators.required, Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%&*_^]).{8,}')])\n    });\n  }\n  get Id() {\n    return this.loginForm.get('id');\n  }\n  get EmailId() {\n    return this.loginForm.get('emailId');\n  }\n  get Password() {\n    return this.loginForm.get('password');\n  }\n  loginFormSubmit() {\n    this.route.navigate(['/user']);\n  }\n  static #_ = this.ɵfac = function CreateAccountComponent_Factory(t) {\n    return new (t || CreateAccountComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateAccountComponent,\n    selectors: [[\"app-create-account\"]],\n    decls: 48,\n    vars: 5,\n    consts: [[1, \"main_div\", \"container-fluid\"], [1, \"row\", \"align-items-start\"], [1, \"col-4\", 2, \"padding-right\", \"0\"], [\"src\", \"https://img.freepik.com/free-vector/mobile-note-list-concept-illustration_114360-6275.jpg?size=626&ext=jpg&ga=GA1.1.292817933.1704106504&semt=ais\", \"alt\", \"Background_image\", 1, \"left_background_img\"], [1, \"col-5\", \"second_col\"], [1, \"card\", \"card_div\"], [1, \"card-body\"], [1, \"row\", \"card_row\"], [1, \"col-4\", 2, \"padding\", \"0\", \"position\", \"absolute\", \"bottom\", \"26rem\"], [\"src\", \"https://tse1.mm.bing.net/th?id=OIP.lp1Ryt5o-2u-kt_XHNLy5AHaHa&pid=Api&P=0&h=180\", \"alt\", \"logo_image\", 2, \"height\", \"2rem\", \"margin-left\", \"4.3rem\", \"position\", \"absolute\", \"bottom\", \"12rem\"], [1, \"col-6\", 2, \"padding\", \"0\", \"position\", \"absolute\", \"left\", \"8.8rem\", \"bottom\", \"37.8rem\"], [1, \"card-title\"], [1, \"card-text\", \"login_text_p\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"input-group\", \"mb-3\", \"Id_div\"], [1, \"input-group-text\"], [1, \"form-floating\"], [\"type\", \"number\", \"formControlName\", \"id\", \"id\", \"floatingInput\", \"placeholder\", \"ID\", 1, \"form-control\"], [\"for\", \"floatingInput\"], [\"class\", \"alert alert-danger Id_validation_div\", 4, \"ngIf\"], [1, \"input-group\", \"mb-3\", \"username_div\"], [\"type\", \"email\", \"formControlName\", \"emailId\", \"id\", \"floatingInput\", \"placeholder\", \"Username\", 1, \"form-control\"], [\"class\", \"alert alert-danger username_validation_div\", 4, \"ngIf\"], [1, \"input-group\", \"mb-3\", \"password_div\"], [1, \"input-group-text\", 2, \"padding-right\", \"1.3rem\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"floatingPassword\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"for\", \"floatingPassword\"], [\"class\", \"alert alert-danger password_validation_div\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-danger\", \"login_btn\", 3, \"disabled\"], [\"type\", \"reset\", 1, \"btn\", \"btn-outline-warning\", \"clearbtn\"], [\"routerLink\", \"\", 1, \"create_account\"], [1, \"col-3\"], [\"src\", \"https://img.freepik.com/free-vector/appointment-booking-with-smartphone_23-2148554946.jpg?size=626&ext=jpg&ga=GA1.1.292817933.1704106504&semt=ais\", \"alt\", \"Background_image\", 1, \"right_background_img\"], [1, \"alert\", \"alert-danger\", \"Id_validation_div\"], [4, \"ngIf\"], [1, \"alert\", \"alert-danger\", \"username_validation_div\"], [1, \"alert\", \"alert-danger\", \"password_validation_div\"]],\n    template: function CreateAccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"div\", 8);\n        i0.ɵɵelement(9, \"img\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 10)(11, \"h5\", 11);\n        i0.ɵɵtext(12, \"Aboli's TMS\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"p\", 12);\n        i0.ɵɵtext(14, \"Log in to continue\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"form\", 13);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateAccountComponent_Template_form_ngSubmit_15_listener() {\n          return ctx.loginFormSubmit();\n        });\n        i0.ɵɵelementStart(16, \"div\", 14)(17, \"span\", 15);\n        i0.ɵɵtext(18, \"#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 16);\n        i0.ɵɵelement(20, \"input\", 17);\n        i0.ɵɵelementStart(21, \"label\", 18);\n        i0.ɵɵtext(22, \"ID\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(23, CreateAccountComponent_div_23_Template, 2, 1, \"div\", 19);\n        i0.ɵɵelementStart(24, \"div\", 20)(25, \"span\", 15);\n        i0.ɵɵtext(26, \"@\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 16);\n        i0.ɵɵelement(28, \"input\", 21);\n        i0.ɵɵelementStart(29, \"label\", 18);\n        i0.ɵɵtext(30, \"Username\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(31, CreateAccountComponent_div_31_Template, 3, 2, \"div\", 22);\n        i0.ɵɵelementStart(32, \"div\", 23)(33, \"span\", 24);\n        i0.ɵɵtext(34, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 16);\n        i0.ɵɵelement(36, \"input\", 25);\n        i0.ɵɵelementStart(37, \"label\", 26);\n        i0.ɵɵtext(38, \"Password\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(39, CreateAccountComponent_div_39_Template, 3, 2, \"div\", 27);\n        i0.ɵɵelementStart(40, \"button\", 28);\n        i0.ɵɵtext(41, \"Log In\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"button\", 29);\n        i0.ɵɵtext(43, \"Clear\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"a\", 30);\n        i0.ɵɵtext(45, \"Create an account\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(46, \"div\", 31);\n        i0.ɵɵelement(47, \"img\", 32);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.Id && ctx.Id.invalid && ctx.Id.touched);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.EmailId && ctx.EmailId.invalid && ctx.EmailId.touched);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.Password && ctx.Password.invalid && ctx.Password.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    dependencies: [i2.NgIf, i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\".main_div[_ngcontent-%COMP%]{\\r\\n    background-color: rgb(250, 251, 252);\\r\\n    height: 44rem;\\r\\n    width: 76.2rem;\\r\\n}\\r\\n.left_background_img[_ngcontent-%COMP%]{\\r\\n    height: 25rem;\\r\\n    margin-top: 10.4rem;\\r\\n    \\r\\n    width: 21rem;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlYXRlLWFjY291bnQvY3JlYXRlLWFjY291bnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG9DQUFvQztJQUNwQyxhQUFhO0lBQ2IsY0FBYztBQUNsQjtBQUNBO0lBQ0ksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluX2RpdntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsIDI1MSwgMjUyKTtcclxuICAgIGhlaWdodDogNDRyZW07XHJcbiAgICB3aWR0aDogNzYuMnJlbTtcclxufVxyXG4ubGVmdF9iYWNrZ3JvdW5kX2ltZ3tcclxuICAgIGhlaWdodDogMjVyZW07XHJcbiAgICBtYXJnaW4tdG9wOiAxMC40cmVtO1xyXG4gICAgLyogbWFyZ2luLWxlZnQ6IDByZW07ICovXHJcbiAgICB3aWR0aDogMjFyZW07XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","i0","CreateAccountComponent","constructor","route","id","required","emailId","pattern","password","Id","loginForm","get","EmailId","Password","loginFormSubmit","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["G:\\TMS\\TMS_Backend\\src\\app\\create-account\\create-account.component.ts","G:\\TMS\\TMS_Backend\\src\\app\\create-account\\create-account.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-account',\n  templateUrl: './create-account.component.html',\n  styleUrls: ['./create-account.component.css']\n})\nexport class CreateAccountComponent {\n  loginForm = new FormGroup({\n    id:new FormControl('',[Validators.required]),\n    emailId:new FormControl('',[Validators.required,Validators.pattern('^[a-z0-9]+@[gmail]+\\.com$')]),\n    password:new FormControl('',[Validators.required,Validators.pattern('(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%&*_^]).{8,}')])\n  })\n  constructor(private route:Router){\n\n  }\n  get Id(){\n    return this.loginForm.get('id');\n  }\n  get EmailId(){\n    return this.loginForm.get('emailId');\n  }\n\n  get Password(){\n    return this.loginForm.get('password');\n  }\n\n  loginFormSubmit(){\n    this.route.navigate(['/user']); \n  }\n}\n","<div class=\"main_div container-fluid\">\n    <div class=\"row align-items-start\">\n        <div class=\"col-4\" style=\"padding-right: 0;\">\n            <img class=\"left_background_img\" src=\"https://img.freepik.com/free-vector/mobile-note-list-concept-illustration_114360-6275.jpg?size=626&ext=jpg&ga=GA1.1.292817933.1704106504&semt=ais\" alt=\"Background_image\">\n        </div>\n        <div class=\"col-5 second_col\">\n            <div class=\"card card_div\">\n                <div class=\"card-body\">\n                    <div class=\"row card_row\">\n                        <div class=\"col-4\" style=\"padding: 0;position: absolute;bottom: 26rem;\">\n                            <img src=\"https://tse1.mm.bing.net/th?id=OIP.lp1Ryt5o-2u-kt_XHNLy5AHaHa&pid=Api&P=0&h=180\" alt=\"logo_image\" style=\"height: 2rem;margin-left: 4.3rem;position: absolute;bottom: 12rem;\">\n                        </div>\n                        <div class=\"col-6\" style=\"padding: 0;position: absolute;left: 8.8rem;bottom: 37.8rem;\">\n                            <h5 class=\"card-title\">Aboli's TMS</h5>\n                        </div>\n                    </div>\n                    <p class=\"card-text login_text_p\">Log in to continue</p>\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginFormSubmit()\">\n                        <div class=\"input-group mb-3 Id_div\">\n                            <span class=\"input-group-text\">#</span>\n                            <div class=\"form-floating\">\n                              <input type=\"number\" class=\"form-control\" formControlName=\"id\" id=\"floatingInput\" placeholder=\"ID\">\n                              <label for=\"floatingInput\">ID</label>\n                            </div>\n                        </div>\n                        <div class=\"alert alert-danger Id_validation_div\" *ngIf=\"Id && Id.invalid && Id.touched\">\n                            <div *ngIf=\"Id.errors?.['required']\">\n                                Id is required\n                            </div>\n                        </div>\n                        <div class=\"input-group mb-3 username_div\">\n                            <span class=\"input-group-text\">@</span>\n                            <div class=\"form-floating\">\n                              <input type=\"email\" class=\"form-control\" formControlName=\"emailId\" id=\"floatingInput\" placeholder=\"Username\">\n                              <label for=\"floatingInput\">Username</label>\n                            </div>\n                        </div>\n                        <div class=\"alert alert-danger username_validation_div\" *ngIf=\"EmailId && EmailId.invalid && EmailId.touched\">\n                            <div *ngIf=\"EmailId.errors?.['required']\">\n                                Email Id is Required\n                            </div>\n                            <div *ngIf=\"EmailId.errors?.['pattern']\">\n                                Email Id is not in a Valid Format\n                            </div>\n                        </div>\n                        <div class=\"input-group mb-3 password_div\">\n                            <span class=\"input-group-text\" style=\"padding-right: 1.3rem;\">*</span>\n                            <div class=\"form-floating\">\n                              <input type=\"password\" class=\"form-control\" formControlName=\"password\" id=\"floatingPassword\" placeholder=\"Password\">\n                              <label for=\"floatingPassword\">Password</label>\n                            </div>\n                        </div>\n                        <div class=\"alert alert-danger password_validation_div\" *ngIf=\"Password && Password.invalid && Password.touched\">\n                            <div *ngIf=\"Password.errors?.['required']\">\n                                Password is Required\n                            </div>\n                            <div *ngIf=\"Password.errors?.['pattern']\">\n                                Password is not valid......It should atleast contain 1 uppercase, 1 lowercase, 1 digit and 1 special symbol and should be atleast 8 characters long\n                            </div>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-outline-danger login_btn\" [disabled]=\"loginForm.invalid\">Log In</button>\n                        <button type=\"reset\" class=\"btn btn-outline-warning clearbtn\">Clear</button>\n                        <a routerLink=\"\" class=\"create_account\">Create an account</a>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-3\">\n            <img src=\"https://img.freepik.com/free-vector/appointment-booking-with-smartphone_23-2148554946.jpg?size=626&ext=jpg&ga=GA1.1.292817933.1704106504&semt=ais\" alt=\"Background_image\" class=\"right_background_img\">\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}