{"ast":null,"code":"import { TaskComponent } from '../task/task.component';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../my-service.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction InboxComponent_div_16_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵtext(1, \" Id is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InboxComponent_div_16_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, InboxComponent_div_16_div_24_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.TaskId.errors == null ? null : ctx_r2.TaskId.errors[\"required\"]);\n  }\n}\nfunction InboxComponent_div_16_div_30_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵtext(1, \" Task Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InboxComponent_div_16_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, InboxComponent_div_16_div_30_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.TaskName.errors == null ? null : ctx_r3.TaskName.errors[\"required\"]);\n  }\n}\nfunction InboxComponent_div_16_div_36_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵtext(1, \" Description is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InboxComponent_div_16_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, InboxComponent_div_16_div_36_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.desc.errors == null ? null : ctx_r4.desc.errors[\"required\"]);\n  }\n}\nfunction InboxComponent_div_16_div_42_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵtext(1, \" Overdue Date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InboxComponent_div_16_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵtemplate(1, InboxComponent_div_16_div_42_div_1_Template, 2, 0, \"div\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.Overdue.errors == null ? null : ctx_r5.Overdue.errors[\"required\"]);\n  }\n}\nfunction InboxComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15)(2, \"div\", 16);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 17)(5, \"h5\", 18);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 19);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 19);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 20)(12, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function InboxComponent_div_16_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateTask(item_r1.task_id));\n    });\n    i0.ɵɵtext(13, \"Update\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"form\", 22)(15, \"div\", 23)(16, \"div\", 24)(17, \"div\", 25)(18, \"div\", 26)(19, \"h1\", 27)(20, \"div\", 28)(21, \"input\", 29);\n    i0.ɵɵlistener(\"ngModelChange\", function InboxComponent_div_16_Template_input_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.task.task_id = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"label\", 30);\n    i0.ɵɵtext(23, \"Task Id\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(24, InboxComponent_div_16_div_24_Template, 2, 1, \"div\", 31);\n    i0.ɵɵelement(25, \"hr\", 32);\n    i0.ɵɵelementStart(26, \"div\", 33)(27, \"input\", 34);\n    i0.ɵɵlistener(\"ngModelChange\", function InboxComponent_div_16_Template_input_ngModelChange_27_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.task.task_name = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"label\", 35);\n    i0.ɵɵtext(29, \" Task Name\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(30, InboxComponent_div_16_div_30_Template, 2, 1, \"div\", 31);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 36)(32, \"div\", 33)(33, \"input\", 37);\n    i0.ɵɵlistener(\"ngModelChange\", function InboxComponent_div_16_Template_input_ngModelChange_33_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.task.description = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"label\", 38);\n    i0.ɵɵtext(35, \" Description\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(36, InboxComponent_div_16_div_36_Template, 2, 1, \"div\", 31);\n    i0.ɵɵelement(37, \"hr\", 39);\n    i0.ɵɵelementStart(38, \"div\", 40)(39, \"input\", 41);\n    i0.ɵɵlistener(\"ngModelChange\", function InboxComponent_div_16_Template_input_ngModelChange_39_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.task.overdue = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(40, \"label\", 42);\n    i0.ɵɵtext(41, \"Overdue\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(42, InboxComponent_div_16_div_42_Template, 2, 1, \"div\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"div\", 43)(44, \"button\", 44);\n    i0.ɵɵtext(45, \"Close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"button\", 45);\n    i0.ɵɵtext(47, \"Save changes\");\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵelementStart(48, \"div\")(49, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function InboxComponent_div_16_Template_button_click_49_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.deleteTask(item_r1.task_id));\n    });\n    i0.ɵɵtext(50, \"Delete\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.task_id, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r1.task_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.overdue);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.updateTaskForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.task.task_id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.TaskId && ctx_r0.TaskId.invalid && ctx_r0.TaskId.touched);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.task.task_name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.TaskName && ctx_r0.TaskName.invalid && ctx_r0.TaskName.touched);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.task.description);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.desc && ctx_r0.desc.invalid && ctx_r0.desc.touched);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.task.overdue);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.Overdue && ctx_r0.Overdue.invalid && ctx_r0.Overdue.touched);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.updateTaskForm.invalid);\n  }\n}\nexport class InboxComponent {\n  constructor(router, serv, route) {\n    this.router = router;\n    this.serv = serv;\n    this.route = route;\n    this.task = new TaskComponent();\n    // task1:TaskComponent = new TaskComponent();\n    this.id = 0;\n    this.updateTaskForm = new FormGroup({\n      Task_id: new FormControl('', [Validators.required]),\n      task_name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n      overdue: new FormControl('', [Validators.required])\n    });\n  }\n  get TaskId() {\n    return this.updateTaskForm.get('Task_id');\n  }\n  get TaskName() {\n    return this.updateTaskForm.get('task_name');\n  }\n  get desc() {\n    return this.updateTaskForm.get('description');\n  }\n  get Overdue() {\n    return this.updateTaskForm.get('overdue');\n  }\n  ngOnInit() {\n    this.getTasks();\n    this.id = this.route.snapshot.params['id'];\n    // this.serv.getTaskById(this.id).subscribe(data => {\n    //   this.task = data;\n    // }, error => console.log(error));\n  }\n\n  getTasks() {\n    this.serv.getAllTasks().subscribe(data => {\n      this.tasks = data;\n    });\n  }\n  // updateTask(id:number){\n  //   this.router.navigate(['/user/task-inbox',id]);\n  // }\n  deleteTask(id) {\n    this.serv.deleteTask(id).subscribe(data => {\n      console.log(data);\n      this.getTasks();\n    });\n  }\n  // id:number=0;\n  // updateTaskForm = new FormGroup({\n  //   Task_id:new FormControl('',[Validators.required]),\n  //   task_name:new FormControl('',[Validators.required]),\n  //   description:new FormControl('',[Validators.required]),\n  //   overdue:new FormControl('',[Validators.required])\n  // })\n  // get TaskId(){\n  //   return this.updateTaskForm.get('Task_id');\n  // }\n  // get TaskName(){\n  //   return this.updateTaskForm.get('task_name');\n  // }\n  // get desc(){\n  //   return this.updateTaskForm.get('description');\n  // }\n  // get Overdue(){\n  //   return this.updateTaskForm.get('overdue');\n  // }\n  // UpdateTaskFormSubmit(){\n  //   // this.serv.updateTask(this.task.task_id, this.task).subscribe( data =>{\n  //   //   this.goToTaskList();\n  //   // }\n  //   // , error => console.log(error));\n  //   // alert(\"Updated Task Successfully\");\n  //   // this.updateTask(this.task.task_id);\n  // }\n  // goToTaskList() {\n  //   this.router.navigate(['/user/task-inbox']);\n  // }\n  updateTask(id) {\n    this.saveChanges(id);\n    // this.serv.updateTask(this.id, this.task).subscribe( data =>{\n    //   console.log(this.task);\n    //   this.goToTaskList();\n    // }\n    // , error => console.log(error));\n    // alert(\"Updated Task Successfully\");\n  }\n\n  saveChanges(id) {\n    this.serv.updateTask(id, this.task).subscribe(data => {\n      console.log(this.task);\n      // this.goToTaskList();\n    }, error => console.log(error));\n    alert(\"Updated Task Successfully\");\n  }\n  static #_ = this.ɵfac = function InboxComponent_Factory(t) {\n    return new (t || InboxComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.MyServiceService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InboxComponent,\n    selectors: [[\"app-inbox\"]],\n    decls: 24,\n    vars: 1,\n    consts: [[1, \"main_div\", \"container-fluid\"], [1, \"row\", \"align-items-start\"], [1, \"col-4\", 2, \"padding-right\", \"0\"], [\"src\", \"https://img.freepik.com/premium-vector/successful-completion-business-tasks-positive-businessman-with-giant-pencil-nearby-marked-checklist-clipboard-paper-hand-drawn-vector-illustration-doodle-style_73637-873.jpg?size=626&ext=jpg&ga=GA1.1.292817933.1704106504&semt=ais\", \"alt\", \"Background_image\", 1, \"left_image\"], [\"src\", \"https://img.freepik.com/premium-vector/list-girl-holds-red-pencil-notes-completed-tasks-time-time-management-concept-illustration_173706-34.jpg?size=626&ext=jpg&ga=GA1.1.292817933.1704106504&semt=ais\", 1, \"left_image\"], [1, \"col-7\", \"Inbox_Col\"], [1, \"Inbox_H1\"], [\"aria-current\", \"page\", \"data-bs-toggle\", \"modal\", \"href\", \"#exampleModal\", 1, \"nav-link\", \"active\"], [1, \"row\"], [1, \"col-1\", 2, \"width\", \"2rem\"], [1, \"fa-solid\", \"fa-circle-plus\", 2, \"color\", \"brown\"], [1, \"col-4\", 2, \"padding-left\", \"6px\"], [\"aria-current\", \"page\", 1, \"nav-link\", \"active\", \"add_task_link\", 2, \"color\", \"#f82946\"], [\"style\", \"width:23rem;margin-bottom: 2rem;\", 4, \"ngFor\", \"ngForOf\"], [2, \"width\", \"23rem\", \"margin-bottom\", \"2rem\"], [1, \"card\", \"text-start\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [2, \"margin-bottom\", \"1rem\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#staticBackdrop\", 1, \"btn\", \"btn-outline-info\", 2, \"width\", \"21rem\", 3, \"click\"], [3, \"formGroup\"], [\"id\", \"staticBackdrop\", \"data-bs-backdrop\", \"static\", \"data-bs-keyboard\", \"false\", \"tabindex\", \"-1\", \"aria-labelledby\", \"staticBackdropLabel\", \"aria-hidden\", \"true\", 1, \"modal\"], [1, \"modal-dialog\", \"modal-dialog-centered\"], [1, \"modal-content\"], [1, \"modal-header\", 2, \"padding-bottom\", \"11px\"], [\"id\", \"staticBackdropLabel\", 1, \"modal-title\", \"fs-5\"], [1, \"form-floating\", 2, \"margin-bottom\", \"7px\"], [\"type\", \"number\", \"formControlName\", \"Task_id\", \"id\", \"floatingInput\", \"placeholder\", \"Task Id\", 1, \"form-control\", 2, \"border-style\", \"none\", \"padding-bottom\", \"0px\", \"padding-top\", \"20px\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"floatingInput\", 1, \"task_id_label\", 2, \"color\", \"#4ea2a4\"], [\"class\", \"alert alert-danger\", \"style\", \"padding:0;margin-top: 0.7rem;\", 4, \"ngIf\"], [2, \"width\", \"31.2rem\", \"position\", \"absolute\", \"top\", \"4rem\", \"left\", \"0rem\"], [1, \"form-floating\"], [\"type\", \"text\", \"formControlName\", \"task_name\", \"id\", \"floatingInput\", \"placeholder\", \"Task Name\", 1, \"form-control\", \"task_name_field\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"floatingInput task_name_label\", 2, \"color\", \"#4ea2a4\", \"font-size\", \"1rem\"], [1, \"modal-body\", 2, \"padding-bottom\", \"0\", \"padding-top\", \"0px\"], [\"type\", \"text\", \"id\", \"floatingInput\", \"formControlName\", \"description\", \"placeholder\", \"Description\", 1, \"form-control\", 2, \"border-style\", \"none\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"floatingInput\", 1, \"describe_label\", 2, \"color\", \"#f50545\"], [2, \"width\", \"31.2rem\", \"position\", \"absolute\", \"left\", \"0rem\", \"top\", \"2.9rem\"], [1, \"form-floating\", 2, \"margin-top\", \"7px\"], [\"type\", \"date\", \"id\", \"floatingInput\", \"formControlName\", \"overdue\", \"placeholder\", \"Overdue\", 1, \"form-control\", 2, \"border-style\", \"none\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"floatingInput\", 2, \"color\", \"#cf05f5\", \"font-size\", \"18px\", \"font-weight\", \"600\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-outline-dark\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", 3, \"disabled\"], [1, \"btn\", \"btn-outline-danger\", 2, \"width\", \"21rem\", 3, \"click\"], [1, \"alert\", \"alert-danger\", 2, \"padding\", \"0\", \"margin-top\", \"0.7rem\"], [\"style\", \"font-size: medium;\", 4, \"ngIf\"], [2, \"font-size\", \"medium\"]],\n    template: function InboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3)(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"h1\", 6);\n        i0.ɵɵtext(7, \"Inbox\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"hr\");\n        i0.ɵɵelementStart(9, \"a\", 7)(10, \"div\", 8)(11, \"div\", 9);\n        i0.ɵɵelement(12, \"i\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 11)(14, \"p\", 12);\n        i0.ɵɵtext(15, \"Add New Task\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵtemplate(16, InboxComponent_div_16_Template, 51, 14, \"div\", 13);\n        i0.ɵɵelementStart(17, \"a\", 7)(18, \"div\", 8)(19, \"div\", 9);\n        i0.ɵɵelement(20, \"i\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 11)(22, \"p\", 12);\n        i0.ɵɵtext(23, \"Add New Task\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\".left_image[_ngcontent-%COMP%]{\\r\\n    width: 17rem;\\r\\n    margin-top: 3rem;\\r\\n    margin-left: 2rem;\\r\\n}\\r\\n.Inbox_H1[_ngcontent-%COMP%]{\\r\\n    margin-top: 6rem;\\r\\n    margin-left: 17.8rem;\\r\\n    width: 9rem;\\r\\n}\\r\\n.Inbox_Col[_ngcontent-%COMP%]{\\r\\n    padding-left: 0;\\r\\n    margin-left: 0;\\r\\n}\\r\\n.add_task_link[_ngcontent-%COMP%]{\\r\\n    padding-top: 0.8px;\\r\\n    font-style: italic;\\r\\n    font-family: emoji;\\r\\n    font-weight: 700;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaW5ib3gvaW5ib3guY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsb0JBQW9CO0lBQ3BCLFdBQVc7QUFDZjtBQUNBO0lBQ0ksZUFBZTtJQUNmLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi5sZWZ0X2ltYWdle1xyXG4gICAgd2lkdGg6IDE3cmVtO1xyXG4gICAgbWFyZ2luLXRvcDogM3JlbTtcclxuICAgIG1hcmdpbi1sZWZ0OiAycmVtO1xyXG59XHJcbi5JbmJveF9IMXtcclxuICAgIG1hcmdpbi10b3A6IDZyZW07XHJcbiAgICBtYXJnaW4tbGVmdDogMTcuOHJlbTtcclxuICAgIHdpZHRoOiA5cmVtO1xyXG59XHJcbi5JbmJveF9Db2x7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XHJcbiAgICBtYXJnaW4tbGVmdDogMDtcclxufVxyXG4uYWRkX3Rhc2tfbGlua3tcclxuICAgIHBhZGRpbmctdG9wOiAwLjhweDtcclxuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcclxuICAgIGZvbnQtZmFtaWx5OiBlbW9qaTtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["TaskComponent","FormControl","FormGroup","Validators","i0","InboxComponent","constructor","router","serv","route","Task_id","required","task_name","description","overdue","TaskId","updateTaskForm","get","TaskName","desc","Overdue","ngOnInit","getTasks","id","snapshot","params","getAllTasks","subscribe","data","tasks","deleteTask","console","log","updateTask","saveChanges","task","error","alert","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["G:\\TMS\\TMS_Backend\\src\\app\\inbox\\inbox.component.ts","G:\\TMS\\TMS_Backend\\src\\app\\inbox\\inbox.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { TaskComponent } from '../task/task.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MyServiceService } from '../my-service.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-inbox',\n  templateUrl: './inbox.component.html',\n  styleUrls: ['./inbox.component.css']\n})\nexport class InboxComponent {\n  tasks: TaskComponent[] | undefined;\n  constructor(private router:Router,private serv:MyServiceService,private route: ActivatedRoute){}\n  task: TaskComponent = new TaskComponent();\n  // task1:TaskComponent = new TaskComponent();\n  id:number=0;\n  updateTaskForm = new FormGroup({\n    Task_id:new FormControl('',[Validators.required]),\n    task_name:new FormControl('',[Validators.required]),\n    description:new FormControl('',[Validators.required]),\n    overdue:new FormControl('',[Validators.required])\n  })\n  get TaskId(){\n    return this.updateTaskForm.get('Task_id');\n  }\n  get TaskName(){\n    return this.updateTaskForm.get('task_name');\n  }\n  get desc(){\n    return this.updateTaskForm.get('description');\n  }\n\n  get Overdue(){\n    return this.updateTaskForm.get('overdue');\n  }\n  ngOnInit(){\n    this.getTasks();\n    this.id = this.route.snapshot.params['id'];\n\n    // this.serv.getTaskById(this.id).subscribe(data => {\n    //   this.task = data;\n    // }, error => console.log(error));\n  }\n  private getTasks(){\n    this.serv.getAllTasks().subscribe(data => {\n      this.tasks = data;\n    });\n  }\n  // updateTask(id:number){\n  //   this.router.navigate(['/user/task-inbox',id]);\n  // }\n  deleteTask(id:number){\n    this.serv.deleteTask(id).subscribe( data => {\n      console.log(data);\n      this.getTasks();\n    })\n  }\n  // id:number=0;\n  // updateTaskForm = new FormGroup({\n  //   Task_id:new FormControl('',[Validators.required]),\n  //   task_name:new FormControl('',[Validators.required]),\n  //   description:new FormControl('',[Validators.required]),\n  //   overdue:new FormControl('',[Validators.required])\n  // })\n\n  // get TaskId(){\n  //   return this.updateTaskForm.get('Task_id');\n  // }\n  // get TaskName(){\n  //   return this.updateTaskForm.get('task_name');\n  // }\n  // get desc(){\n  //   return this.updateTaskForm.get('description');\n  // }\n\n  // get Overdue(){\n  //   return this.updateTaskForm.get('overdue');\n  // }\n\n  // UpdateTaskFormSubmit(){\n  //   // this.serv.updateTask(this.task.task_id, this.task).subscribe( data =>{\n  //   //   this.goToTaskList();\n  //   // }\n  //   // , error => console.log(error));\n  //   // alert(\"Updated Task Successfully\");\n  //   // this.updateTask(this.task.task_id);\n  // }\n  // goToTaskList() {\n  //   this.router.navigate(['/user/task-inbox']);\n  // }\n  updateTask(id:number){\n      this.saveChanges(id);\n    // this.serv.updateTask(this.id, this.task).subscribe( data =>{\n    //   console.log(this.task);\n    //   this.goToTaskList();\n    // }\n    // , error => console.log(error));\n    // alert(\"Updated Task Successfully\");\n  }\n  saveChanges(id:number){\n    this.serv.updateTask(id, this.task).subscribe( data =>{\n      console.log(this.task);\n      // this.goToTaskList();\n    }\n    , error => console.log(error));\n    alert(\"Updated Task Successfully\");\n  }\n}\n","<div class=\"main_div container-fluid\">\n    <div class=\"row align-items-start\">\n        <div class=\"col-4\" style=\"padding-right: 0;\">\n            <img class=\"left_background_img\" src=\"https://img.freepik.com/premium-vector/successful-completion-business-tasks-positive-businessman-with-giant-pencil-nearby-marked-checklist-clipboard-paper-hand-drawn-vector-illustration-doodle-style_73637-873.jpg?size=626&ext=jpg&ga=GA1.1.292817933.1704106504&semt=ais\" alt=\"Background_image\" class=\"left_image\">\n\n            <img class=\"left_background_img\" src=\"https://img.freepik.com/premium-vector/list-girl-holds-red-pencil-notes-completed-tasks-time-time-management-concept-illustration_173706-34.jpg?size=626&ext=jpg&ga=GA1.1.292817933.1704106504&semt=ais\" class=\"left_image\">\n        </div>\n        <div class=\"col-7 Inbox_Col\">\n            <h1 class=\"Inbox_H1\">Inbox</h1>\n            <hr>\n            <a class=\"nav-link active\" aria-current=\"page\" data-bs-toggle=\"modal\" href=\"#exampleModal\">\n                <div class=\"row\">\n                  <div class=\"col-1\" style=\"width: 2rem;\">\n                    <i class=\"fa-solid fa-circle-plus\" style=\"color: brown;\"></i>\n                  </div>\n                  <div class=\"col-4\" style=\"padding-left: 6px;\">\n                    <p class=\"nav-link active add_task_link\" aria-current=\"page\" style=\"color: #f82946;\">Add New Task</p>\n                  </div>\n                </div>\n            </a>\n            <div *ngFor=\"let item of tasks\" style=\"width:23rem;margin-bottom: 2rem;\">\n              <div class=\"card text-start\">\n                <div class=\"card-header\">\n                  {{item.task_id}}\n                </div>\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">{{item.task_name}}</h5>\n                  <p class=\"card-text\">{{item.description}}</p>\n                  <p class=\"card-text\">{{item.overdue}}</p>\n                  <div style=\"margin-bottom:1rem;\">\n                    <button type=\"button\" (click)=\"updateTask(item.task_id)\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\" style=\"width: 21rem;\" class=\"btn btn-outline-info\">Update</button>\n                  </div>\n\n                  <form [formGroup]=\"updateTaskForm\" >\n                    <div class=\"modal\" id=\"staticBackdrop\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\n                      <div class=\"modal-dialog modal-dialog-centered\">\n                        <div class=\"modal-content\">\n                          <div class=\"modal-header\" style=\"padding-bottom: 11px;\">\n                            <h1 class=\"modal-title fs-5\" id=\"staticBackdropLabel\">\n                              <div class=\"form-floating\" style=\"margin-bottom: 7px;\">\n                                <input type=\"number\" class=\"form-control\" [(ngModel)]=\"task.task_id\" formControlName=\"Task_id\" id=\"floatingInput\" placeholder=\"Task Id\"style=\"border-style: none;padding-bottom: 0px;padding-top: 20px;\">\n                                <label for=\"floatingInput\" style=\"color: #4ea2a4;\" class=\"task_id_label\">Task Id</label>\n                              </div>\n                              <div class=\"alert alert-danger\" style=\"padding:0;margin-top: 0.7rem;\" *ngIf=\"TaskId && TaskId.invalid && TaskId.touched\">\n                                <div *ngIf=\"TaskId.errors?.['required']\" style=\"font-size: medium;\">\n                                    Id is required\n                                </div>\n                              </div>\n                              <hr style=\"width: 31.2rem;position: absolute;top: 4rem;left: 0rem;\">\n                              <div class=\"form-floating\">\n                                <input type=\"text\" class=\"form-control task_name_field\" [(ngModel)]=\"task.task_name\" formControlName=\"task_name\" id=\"floatingInput\" placeholder=\"Task Name\">\n                                <label for=\"floatingInput task_name_label\" style=\"color: #4ea2a4;font-size: 1rem;\"> Task Name</label>\n                              </div>\n                              <div class=\"alert alert-danger\" style=\"padding:0;margin-top: 0.7rem;\" *ngIf=\"TaskName && TaskName.invalid && TaskName.touched\">\n                                <div *ngIf=\"TaskName.errors?.['required']\" style=\"font-size: medium;\">\n                                    Task Name is required\n                                </div>\n                              </div>\n                            </h1>\n                          </div>\n                          <div class=\"modal-body\" style=\"padding-bottom: 0;padding-top: 0px;\">\n                            <div class=\"form-floating\">\n                              <input type=\"text\" class=\"form-control\" [(ngModel)]=\"task.description\" id=\"floatingInput\" formControlName=\"description\" placeholder=\"Description\" style=\"border-style: none;\">\n                              <label for=\"floatingInput\" class=\"describe_label\" style=\"color: #f50545;\"> Description</label>\n                            </div>\n                            <div class=\"alert alert-danger\" style=\"padding:0;margin-top: 0.7rem;\" *ngIf=\"desc && desc.invalid && desc.touched\">\n                              <div *ngIf=\"desc.errors?.['required']\" style=\"font-size: medium;\">\n                                  Description is required\n                              </div>\n                          </div>\n                            <hr style=\"width: 31.2rem;position: absolute;left: 0rem;top: 2.9rem;\">\n                            <div class=\"form-floating\" style=\"margin-top: 7px;\">\n                              <input type=\"date\" class=\"form-control\" [(ngModel)]=\"task.overdue\" id=\"floatingInput\" formControlName=\"overdue\" placeholder=\"Overdue\" style=\"border-style: none;\">\n                              <label for=\"floatingInput\" style=\"color: #cf05f5;font-size: 18px;font-weight: 600;\">Overdue</label>\n                            </div>\n                            <div class=\"alert alert-danger\" style=\"padding:0;margin-top: 0.7rem;\" *ngIf=\"Overdue && Overdue.invalid && Overdue.touched\">\n                              <div *ngIf=\"Overdue.errors?.['required']\" style=\"font-size: medium;\">\n                                  Overdue Date is required\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-outline-dark\" data-bs-dismiss=\"modal\">Close</button>\n                            <button type=\"button\" class=\"btn btn-outline-danger\" [disabled]=\"updateTaskForm.invalid\">Save changes</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                </form>\n\n                  <div>\n                    <button (click)=\"deleteTask(item.task_id)\" style=\"width: 21rem;\" class=\"btn btn-outline-danger\">Delete</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <a class=\"nav-link active\" aria-current=\"page\" data-bs-toggle=\"modal\" href=\"#exampleModal\">\n              <div class=\"row\">\n                <div class=\"col-1\" style=\"width: 2rem;\">\n                  <i class=\"fa-solid fa-circle-plus\" style=\"color: brown;\"></i>\n                </div>\n                <div class=\"col-4\" style=\"padding-left: 6px;\">\n                  <p class=\"nav-link active add_task_link\" aria-current=\"page\" style=\"color: #f82946;\">Add New Task</p>\n                </div>\n              </div>\n          </a>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}