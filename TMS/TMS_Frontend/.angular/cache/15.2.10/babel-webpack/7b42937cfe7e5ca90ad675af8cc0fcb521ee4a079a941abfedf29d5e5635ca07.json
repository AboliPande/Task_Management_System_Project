{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MyServiceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8080/api/v1/tasks\";\n  }\n  getAllTasks() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  deleteTask(task_id) {\n    return this.httpClient.delete(`${this.baseURL}/${task_id}`);\n  }\n  createTask(task) {\n    return this.httpClient.post(`${this.baseURL}`, task);\n  }\n  static #_ = this.ɵfac = function MyServiceService_Factory(t) {\n    return new (t || MyServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MyServiceService,\n    factory: MyServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAY3BC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAXtB,YAAO,GAAG,oCAAoC;EAWT;EAV7CC,WAAW;IACT,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAkB,GAAG,IAAI,CAACC,OAAO,EAAE,CAAC;EAChE;EACAC,UAAU,CAACC,OAAe;IACxB,OAAO,IAAI,CAACL,UAAU,CAACM,MAAM,CAAC,GAAG,IAAI,CAACH,OAAO,IAAIE,OAAO,EAAE,CAAC;EAC7D;EAEAE,UAAU,CAACC,IAAkB;IAC3B,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,GAAG,IAAI,CAACN,OAAO,EAAE,EAAEK,IAAI,CAAC;EACtD;EAAC;qBAXUV,gBAAgB;EAAA;EAAA;WAAhBA,gBAAgB;IAAAY,SAAhBZ,gBAAgB;IAAAa,YAFf;EAAM","names":["MyServiceService","constructor","httpClient","getAllTasks","get","baseURL","deleteTask","task_id","delete","createTask","task","post","factory","providedIn"],"sourceRoot":"","sources":["G:\\TMS\\TMS_Backend\\src\\app\\my-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TaskComponent } from './task/task.component';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyServiceService {\n  private baseURL = \"http://localhost:8080/api/v1/tasks\";\n  getAllTasks():Observable<TaskComponent[]>{\n    return this.httpClient.get<TaskComponent[]>(`${this.baseURL}`);\n  }\n  deleteTask(task_id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL}/${task_id}`);\n  }\n\n  createTask(task:TaskComponent): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL}`, task);\n  }\n  constructor(private httpClient:HttpClient) { }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}